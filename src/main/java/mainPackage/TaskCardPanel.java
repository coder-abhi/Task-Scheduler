/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mainPackage;
//import ActionListenerList.*;
//import ActionListenerList;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.util.concurrent.TimeUnit;
/**
 *
 * @author AK
 */
public class TaskCardPanel extends javax.swing.JPanel {

    /**
     * Creates new form TaskCardPanel
     */
    public TaskCardPanel() {
        
        initComponents();
    }
    
    
    
    
public class ProgressUpdateAL implements ActionListener
    {
        database db = new database();
        int taskId;
        int updateValue;
        int oldValue = 0;
        public ProgressUpdateAL(int taskId){
            this.taskId = taskId;
        }
        public void actionPerformed(ActionEvent e)
        {
            ResultSet rs = db.runReadQuery("select * from tasks where `id` = "+taskId);
            try{
                if(rs.next())
                {
                    oldValue = rs.getInt("work-complete");
                }  
                try{
                    addSpinner.commitEdit();
                }
                catch(Exception t)
                {
                    System.out.println("From serSpinnerListener");
                    System.out.println(t);
                }
                int updateValue = (Integer)addSpinner.getValue();
                
                int newValue = oldValue+updateValue;
                System.out.println("New Value = "+newValue);
                
                boolean check =  db.runWriteQuery("update tasks set `work-complete`="+newValue+" where `id` = "+taskId);
                if(check) System.out.println("It Writes");
            }
            catch(Exception t)
            {
                System.out.println("From ProgressUpdateAL");
                System.out.println(t);
            }
            
        }
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    int getAddSpinnerValue()
    {
        return (Integer)addSpinner.getValue();
    }
    void setSpinnerListener(int taskId)
    {

//        System.out.println("Spinner Value = "+spinnerValue);
        ProgressUpdateAL obj = new ProgressUpdateAL(taskId);
        btnSpinnerSubmit.addActionListener(obj);
    }
    
    
    void setTaskName(String str)
    {
        lblTaskNameAns.setText(str);
    }
    void setTotalWork(String x)
    {
        lblTotalWorkAns.setText(x);
    }
    void setDeadLine(String x)
    {
        lblDeadlineAns.setText(x);
    }
    void setLabelRequire(String x,String y)
    {
        //
    }
    void setDeadLineProgressBar(String start,String end)
    {
        try{
            
        
        TimeUnit time = TimeUnit.HOURS;
        long longStart = Long.parseLong(start);
        long longEnd = Long.parseLong(end);
        int intStart = (int)time.convert(longStart, TimeUnit.MILLISECONDS);
        int intEnd = (int)time.convert(longEnd, TimeUnit.MILLISECONDS);
        deadlineProgressBar.setMinimum(intStart);
        deadlineProgressBar.setMaximum(intEnd);
        }
        catch(Exception e)
        {
            System.out.println("From setDeadlineProgressBar");
            System.out.println(e);
        }
    }
    
    void setWorkProgressBar(String x)
    {
        int val = Integer.parseInt(x);
        workProgressBar.setMaximum(val);
    }
    void setWorkProgressBarValue(String x)
    {
        int val = Integer.parseInt(x);
        workProgressBar.setValue(val);
    }
    void setDeadLineProgressBar(int x)
    {
//        int val = Integer.parseInt(x);
        deadlineProgressBar.setMaximum(x);
    }
    void setDeadLineProgressBarValue(int x)
    {
        deadlineProgressBar.setValue(x);
    }
    void addListener()
    {
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        taskCardPanel = new javax.swing.JPanel();
        workProgressBar = new javax.swing.JProgressBar();
        deadlineProgressBar = new javax.swing.JProgressBar();
        lblTaskName = new javax.swing.JLabel();
        lblRequire = new javax.swing.JLabel();
        addSpinner = new javax.swing.JSpinner();
        btnSpinnerSubmit = new javax.swing.JButton();
        lblWork = new javax.swing.JLabel();
        lblDeadline = new javax.swing.JLabel();
        lblTotalDeadline = new javax.swing.JLabel();
        lblTotalWork = new javax.swing.JLabel();
        lblTaskNameAns = new javax.swing.JLabel();
        lblUpdateProgress = new javax.swing.JLabel();
        lblDeadlineAns = new javax.swing.JLabel();
        lblTotalWorkAns = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(50, 135));

        taskCardPanel.setBackground(new java.awt.Color(255, 51, 204));
        taskCardPanel.setPreferredSize(new java.awt.Dimension(910, 165));

        lblTaskName.setText("Name of Task  :");
        lblTaskName.setMinimumSize(new java.awt.Dimension(0, 0));

        lblRequire.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRequire.setText(" ");
        lblRequire.setMinimumSize(new java.awt.Dimension(0, 0));

        addSpinner.setMinimumSize(new java.awt.Dimension(4, 2));

        btnSpinnerSubmit.setText("Completed");
        btnSpinnerSubmit.setMinimumSize(new java.awt.Dimension(6, 2));
        btnSpinnerSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSpinnerSubmitActionPerformed(evt);
            }
        });

        lblWork.setText("Work");
        lblWork.setMinimumSize(new java.awt.Dimension(2, 1));

        lblDeadline.setText("Deadline");
        lblDeadline.setMinimumSize(new java.awt.Dimension(4, 1));

        lblTotalDeadline.setText("Deadline : ");
        lblTotalDeadline.setMinimumSize(new java.awt.Dimension(4, 1));

        lblTotalWork.setText("Total Work :");
        lblTotalWork.setMinimumSize(new java.awt.Dimension(3, 1));

        lblUpdateProgress.setText("Update Progress");

        lblDeadlineAns.setText(" ");

        lblTotalWorkAns.setText(" ");

        javax.swing.GroupLayout taskCardPanelLayout = new javax.swing.GroupLayout(taskCardPanel);
        taskCardPanel.setLayout(taskCardPanelLayout);
        taskCardPanelLayout.setHorizontalGroup(
            taskCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(taskCardPanelLayout.createSequentialGroup()
                .addGroup(taskCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(taskCardPanelLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(lblWork, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, taskCardPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblDeadline, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(taskCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(taskCardPanelLayout.createSequentialGroup()
                        .addComponent(deadlineProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78))
                    .addGroup(taskCardPanelLayout.createSequentialGroup()
                        .addGroup(taskCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(taskCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(workProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblRequire, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(taskCardPanelLayout.createSequentialGroup()
                                .addComponent(lblTaskName, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTaskNameAns, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(taskCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(taskCardPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblUpdateProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(addSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSpinnerSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE))
                            .addGroup(taskCardPanelLayout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(lblTotalDeadline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblDeadlineAns, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(taskCardPanelLayout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addComponent(lblTotalWork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addComponent(lblTotalWorkAns, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(37, 37, 37))))
        );
        taskCardPanelLayout.setVerticalGroup(
            taskCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(taskCardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(taskCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(taskCardPanelLayout.createSequentialGroup()
                        .addGroup(taskCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTaskName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTaskNameAns, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(taskCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(taskCardPanelLayout.createSequentialGroup()
                                .addComponent(workProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(deadlineProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(taskCardPanelLayout.createSequentialGroup()
                                .addComponent(lblWork, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblDeadline, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(taskCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRequire, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUpdateProgress)
                            .addComponent(addSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSpinnerSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(taskCardPanelLayout.createSequentialGroup()
                        .addGroup(taskCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTotalDeadline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDeadlineAns))
                        .addGap(11, 11, 11)
                        .addGroup(taskCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTotalWork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTotalWorkAns))))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(taskCardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 775, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(taskCardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSpinnerSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSpinnerSubmitActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnSpinnerSubmitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner addSpinner;
    private javax.swing.JButton btnSpinnerSubmit;
    private javax.swing.JProgressBar deadlineProgressBar;
    private javax.swing.JLabel lblDeadline;
    private javax.swing.JLabel lblDeadlineAns;
    private javax.swing.JLabel lblRequire;
    private javax.swing.JLabel lblTaskName;
    private javax.swing.JLabel lblTaskNameAns;
    private javax.swing.JLabel lblTotalDeadline;
    private javax.swing.JLabel lblTotalWork;
    private javax.swing.JLabel lblTotalWorkAns;
    private javax.swing.JLabel lblUpdateProgress;
    private javax.swing.JLabel lblWork;
    private javax.swing.JPanel taskCardPanel;
    private javax.swing.JProgressBar workProgressBar;
    // End of variables declaration//GEN-END:variables
}
